``lazy_matrix_mul``

	>>> module = __import__('101-lazy_matrix_mul')
	>>> lazy_matrix_mul = module.lazy_matrix_mul

		<<======================>>

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
	       [15, 22]])

		<======================>>

	>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
	array([[ 58,  64],
	       [139, 154]])

		<<======================>>


	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[7, 8, 9], [10, 11, 12]])
	array([[ 27,  30,  33],
	       [ 61,  68,  75],
	       [ 95, 106, 117]])

		<<======================>>

	>>> lazy_matrix_mul([[1, 2, 3]], [[4], [5], [6]])
	array([[32]])

		<<======================>>

	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[7, 8], [9, 10]])
	array([[ 25,  28],
	       [ 57,  64],
	       [ 89, 100]])

		<<======================>>

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
	array([[ 9, 12, 15],
	       [19, 26, 33]])

		<<======================>>

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
	Traceback (most recent call last):
	...
	TypeError: m_b must be a list of lists

		<<======================>>

	>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
	TypeError: m_a must be a list of lists

		<<======================>>

	>>> lazy_matrix_mul([[1, 3, 4], [0, 3, 5]], [[1, 2]])
	Traceback (most recent call last):
	...
	ValueError: m_a and m_b can't be multiplied

		<<======================>>

	>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	...
	ValueError: m_a can't be empty

		<<======================>>

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
	Traceback (most recent call last):
	...
	ValueError: m_b can't be empty


		<<======================>>

